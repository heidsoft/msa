<HTML><HEAD><TITLE>网络7层管理和过滤的领导者</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<LINK rel=stylesheet type=text/css href="/msa/publiccss/pubcss.css">
<LINK rel=stylesheet type=text/css href="/msa/extjs/resources/css/ext-all.css">
<link rel="stylesheet" type="text/css" href="/msa/extjs/resources/css/feed-viewer.css" />
<LINK rel=stylesheet type=text/css href="/msa/extjs/resources/css/xtheme-default.css" id="xthemecss" >
<script type="text/javascript" src="/msa/extjs/adapter/ext/ext-base.js"></script>
<SCRIPT type=text/javascript  src="/msa/extjs/ext-all.js"></SCRIPT>
<STYLE type=text/css>
HTML {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 12px verdana; HEIGHT: 100%; OVERFLOW: hidden; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
BODY {
	MARGIN: 0px; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 12px verdana; HEIGHT: 100%; OVERFLOW: hidden; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
P {
	MARGIN: 0px
}
</STYLE>
<SCRIPT type=text/javascript>
Ext.BLANK_IMAGE_URL = '/msa/extjs/resources/images/default/s.gif';
    var pagesize;
		pagesize=100;
		Ext.onReady(function() {
	 	var sm = new Ext.grid.CheckboxSelectionModel();
	 	var sm1 = new Ext.grid.CheckboxSelectionModel();
    var xtzystore = new Ext.data.JsonStore({
        root: 'Results',
        totalProperty: 'totalCount',
        url:'/msa/main.xp?Fun=ruleGroupUserlist+groupid=[$groupid$]',
        baseParams:{Fun:'ruleGroupUserlist',groupid:'[$groupid$]'},
        fields: [
           {name: 'userid'},
           {name: 'username'},
           {name: 'dispname'}
        ]
    });

    xtzystore.load();

     HlPagingToolbar = Ext.extend(Ext.PagingToolbar, {
					    displayInfo: true,
					    displayMsg: '{0}-{1} 共{2}条',
					    emptyMsg: "无记录",
					    initComponent : function(){
		    	      	var pageSizeItems = [
		                     '-','每页',
		                     this.inputItem = new Ext.form.NumberField({
											    cls: 'x-tbar-page-number',
											    allowDecimals: false,
											    allowNegative: false,
											    enableKeyEvents: true,
											    maxValue: 500,
											    maxText: '每页不允许超过500条',
											    selectOnFocus: true,
											    value: this.pageSize,
											    submitValue: false,
											    listeners: {
											        scope: this,
											        keydown: this.onHlPagingKeyDown,
											        blur: this.onHlPagingBlur
											    }
		                     }),'条','-'];
				         var userItems = this.items || [];
				         this.items = userItems.concat(pageSizeItems);
				         HlPagingToolbar.superclass.initComponent.call(this);
				    },
				    onHlPagingKeyDown: function(field, e){
				        if(field.isValid()){
				            var k = e.getKey();
				             if (k == e.RETURN) {
				                    e.stopEvent();
				                    this.pageSize = field.getValue();
				                    pagesize=this.pageSize;
				                    //alert(this.pageSize);
				                    this.doRefresh();
				             }
				        }
				    },
				    onHlPagingBlur: function(field){
				        if(field.isValid()){
				            this.pageSize = field.getValue();
				            //alert(this.pageSize);
				            pagesize=this.pageSize;
				            this.doRefresh();
				        }
				    }
				});
    var pagingBar= new HlPagingToolbar({
		        store: xtzystore,
		        pageSize: pagesize,
		        displayInfo: true});
    var firstGrid = new Ext.grid.GridPanel({
        store: xtzystore,
        sm: sm,
        columns: [new Ext.grid.RowNumberer(),
                  sm,
		            {id:'username',header: "账户名称", width: 90, sortable: true, dataIndex: 'username'},
		            {header: "显示名称",   width: 90, sortable: true,  dataIndex: 'dispname'}
        ],
        tbar: pagingBar,
        stripeRows: true,
        autoExpandColumn: 'username',
        title           : '可配置用户',
        height:550,
        frame:false,
		    collapsible:true,
		    loadMask:{msg:'正在加载数据，请稍侯……'},
		    draggable:false
    });
    var rightClick  = new Ext.menu.Menu({
                id:'feeds-ctx',
                items: [{
                    id:'users',
                    iconCls:'load-icon',
                    text:'添加到配置用户',
                    scope: this,
                    handler:function(){
                        var record=firstGrid.getSelectionModel().getSelections();
												var array = new Array(record.length);
												if(record.length==0){
														Ext.MessageBox.alert('提示','请先选择用户!');
												}else{
														for(var i=0;i<record.length;i++){
													                    array[i] = record[i].get('userid');
													                    Ext.Ajax.request({
														                      method : 'POST',
														                      url:'/msa/main.xp',
								                                  success: function(response,options){
								   																			//Ext.MessageBox.alert(' 提示',Ext.decode(response.responseText).msg);
								   																			secondGridStore.load();
								   																},
 																									failure: function(response,options){
 																												//Ext.MessageBox.alert('提示',Ext.decode(response.responseText).msg);
 																									},
								 					                        params:{Fun:'addruleuser',userid:array[i],ruleid:'[$ruleid$]'}
													  										 	});
													  }
												}
                    }
                }
            ]});
      firstGrid.addListener('rowcontextmenu', rightClickFn);
		  function rightClickFn(client, rowIndex, e) {
					                rightClick.showAt(e.getXY());
					                detailEl= rowIndex;
		  }
    var secondGridStore = new Ext.data.JsonStore({
        root: 'Results',
        totalProperty: 'totalCount',
        url:'/msa/main.xp',
        baseParams:{Fun:'serviceUserlist',ruleid:'[$ruleid$]'},
        fields: [
           {name: 'userid'},
           {name: 'username'},
           {name: 'dispname'}
        ]
    });
		secondGridStore.load();
    // create the destination Grid
    var secondGrid = new Ext.grid.GridPanel({
        store            : secondGridStore,
        sm: sm1,
        columns: [new Ext.grid.RowNumberer(),
                  sm1,
		            {id:'username',header: "账户名称", width: 90, sortable: true, dataIndex: 'username'},
		            {header: "显示名称",   width: 90, sortable: true,  dataIndex: 'dispname'}
        ],
        stripeRows      : true,
        autoExpandColumn: 'username',
        title           : '已配置用户',
        height          :550,
        frame           :false,
		    collapsible     :true,
		    loadMask        :{msg:'正在加载数据，请稍侯……'},
		    draggable       :false
    });
    var rightClick1  = new Ext.menu.Menu({
                id:'second',
                items: [{
                    id:'delclient',
                    iconCls:'load-icon',
                    text:'删除该用户',
                    scope: this,
                    handler:function(){                    
                    var record=secondGrid.getSelectionModel().getSelections();
										var array = new Array(record.length);
										if(record.length==0){
												Ext.MessageBox.alert('提示','请先选择用户!');
										}else{
                        function confirmdelclient(btn){
													        if(btn=='yes'){
																				for(var i=0;i<record.length;i++){
																			     array[i] = record[i].get('userid');
																					 //secondGridStore.load({params:{Fun:'serviceUserlist',ruleid:'[$ruleid$]',delflag:'delflag',userid:array[i]}
																					 Ext.Ajax.request({
														                      method : 'POST',
														                      url:'/msa/main.xp',
								                                  success: function(response,options){
								   																			//Ext.MessageBox.alert(' 提示',Ext.decode(response.responseText).msg);
								   																},
 																									failure: function(response,options){
 																												//Ext.MessageBox.alert('提示',Ext.decode(response.responseText).msg);
 																									},
								 					                        params:{Fun:'serviceUserlist',ruleid:'[$ruleid$]',delflag:'delflag',userid:array[i]}
													  										 	});
																			  }
																			  secondGridStore.load();
													        }
											 };
                       Ext.MessageBox.confirm('Confirm', '您确认要删除这些用户?', confirmdelclient);
										}
                    }
                }
            ]});
      secondGrid.addListener('rowcontextmenu', leftClickFn);
		  function leftClickFn(client, rowIndex, e) {
					                rightClick1.showAt(e.getXY());
					                detailEl= rowIndex;
		  }
		  var cmbox=new Ext.form.ComboBox
      ({
        id:'cmbox',
        title:'显示名',
        //加载数据源
        store:xtzystore,
        //从本地加载数据（智能感应效果）
        mode:"local",
        //显示字段类似DropDownlist中的DataTextField
        displayField:'dispname',
        //类似DropDownlist中的DataValueField
        valueField:'userid',
        width:160,
        //不允许为空
        allowBlank:true,
        //默认值
		    emptyText:'请输入显示名进行搜索...',
		    //当为空的时候提示
		    blankText:'请输入显示名...'
      });
    //Simple 'border layout' panel to house both grids
		var displayPanel = new Ext.Panel({
					width        : 800,
					height       : 550,
					region:'center',
					layout       : 'column',
					renderTo     : document.body,
					items:[{columnWidth:.5,
									items: [firstGrid]},
					{columnWidth:.5,
				   items: [secondGrid]}
				  ],
					tbar    : [
					'-',
					{
				   icon: '/msa/images/deleteIcon.gif',
           cls: 'x-btn-text-icon details',
           enableToggle:true,
					 text    : '返回选择部门',
					 handler : function() {
				      		parent.menufrm.location.href='/msa/main.xp?Fun=ShowSelectUserTree&ruleid=[$ruleid$]&name=selectUserTree';
					 }
					},
					'-','搜索：',cmbox,'-']
		});
    new Ext.Viewport({
					layout: 'border',
					items: [displayPanel
					],
	        renderTo: Ext.getBody()
	    });
});
</SCRIPT>
<style>
    .complete .x-tree-node-anchor span {
        text-decoration: line-through;
        color: #777;
    }
</style>
</head>
<body oncontextmenu="return false" bgcolor="#F0f0f0" topmargin=0 leftmargin=0 style="SCROLLBAR-FACE-COLOR: #f0f0f0;  overflow-x:hidden;  OVERFLOW: scroll; SCROLLBAR-SHADOW-COLOR: #f0f0f0; SCROLLBAR-3DLIGHT-COLOR: #f0f0f0; SCROLLBAR-ARROW-COLOR: #f0f0f0; SCROLLBAR-DARKSHADOW-COLOR: #cccccc;" >
			<input type="hidden" name="ruleid" value="[$ruleid$]">
</body>
</html>
